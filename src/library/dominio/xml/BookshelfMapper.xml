<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="library.mapper.BookshelfMapper" >
  <resultMap id="BaseResultMap" type="library.domain.Bookshelf" >
    <id column="id_bookshelf" property="idBookshelf" jdbcType="INTEGER" />
    <result column="id_library" property="idLibrary" jdbcType="INTEGER" />
    <result column="code_id_initial" property="codeIdInitial" jdbcType="INTEGER" />
    <result column="code_id_final" property="codeIdFinal" jdbcType="INTEGER" />
    <result column="prefix_code_id_initial" property="prefixCodeIdInitial" jdbcType="VARCHAR" />
    <result column="prefix_code_id_final" property="prefixCodeIdFinal" jdbcType="VARCHAR" />
    <result column="version_code_id_initial" property="versionCodeIdInitial" jdbcType="VARCHAR" />
    <result column="version_code_id_final" property="versionCodeIdFinal" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id_bookshelf, id_library, code_id_initial,code_id_final,prefix_code_id_initial,prefix_code_id_final,version_code_id_initial,version_code_id_final
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="library.domain.BookshelfExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from public.bookshelf
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
  
  <select id="selectByCodeIdShelf" resultMap="BaseResultMap" >
  	select 
    <include refid="Base_Column_List" />
  	from public.bookshelf
    where 
    id_library = #{idLibrary,jdbcType=INTEGER} AND
  	prefix_code_id_initial = #{prefixCodeIdInitial,jdbcType=VARCHAR} AND
	prefix_code_id_final = #{prefixCodeIdFinal,jdbcType=VARCHAR} AND
	code_id_initial &lt;= #{codeIdInitial,jdbcType=INTEGER} AND 
	code_id_final &gt;= #{codeIdFinal,jdbcType=INTEGER}
  </select>
  
  
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from public.bookshelf
    where id_bookshelf = #{idBookshelf,jdbcType=INTEGER}
  </select>
   <select id="selectBiggestId"  resultType="java.lang.Integer" >
    select max(id_bookshelf) from public.bookshelf
  </select>
 
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from public.bookshelf
    where id_bookshelf = #{idBookshelf,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByLibraryId" parameterType="java.lang.Integer" >
    delete from public.bookshelf
    where id_library = #{idLibrary,jdbcType=INTEGER}
  </delete>
  
  <delete id="deleteByExample" parameterType="library.domain.BookshelfExample" >
    delete from public.bookshelf
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="library.domain.Bookshelf" >
    insert into public.bookshelf (id_bookshelf, id_library, code_id_initial,code_id_final,prefix_code_id_initial,prefix_code_id_final,version_code_id_initial,version_code_id_final
      )
    values (#{idBookshelf,jdbcType=INTEGER}, #{idLibrary,jdbcType=INTEGER}, #{codeIdInitial,jdbcType=INTEGER},#{codeIdFinal,jdbcType=INTEGER},#{prefixCodeIdInitial,jdbcType=VARCHAR},#{prefixCodeIdFinal,jdbcType=VARCHAR},#{versionCodeIdInitial,jdbcType=VARCHAR},#{versionCodeIdFinal,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="library.domain.Bookshelf" >
    insert into public.bookshelf
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="idBookshelf != null" >
        id_bookshelf,
      </if>
      <if test="idLibrary != null" >
        id_library,
      </if>
      <if test="codeIdInitial != null" >
        code_id_initial,
      </if>
      <if test="codeIdFinal != null" >
        code_id_final,
      </if>
      <if test="prefixCodeIdInitial != null" >
        prefix_code_id_initial,
      </if>
      <if test="prefixCodeIdFinal != null" >
        prefix_code_id_final,
      </if>
      <if test="versionCodeIdInitial != null" >
        version_code_id_initial,
      </if>
      <if test="versionCodeIdFinal != null" >
        version_code_id_final,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="idBookshelf != null" >
        #{idBookshelf,jdbcType=INTEGER},
      </if>
      <if test="idLibrary != null" >
        #{idLibrary,jdbcType=INTEGER},
      </if>
      <if test="codeIdInitial != null" >
        #{codeIdInitial,jdbcType=INTEGER},
      </if>
      <if test="codeIdFinal != null" >
        #{codeIdFinal,jdbcType=INTEGER},
      </if>
      <if test="prefixCodeIdInitial != null" >
        #{prefixCodeIdInitial,jdbcType=VARCHAR},
      </if>
      <if test="prefixCodeIdFinal != null" >
        #{prefixCodeIdFinal,jdbcType=VARCHAR},
      </if>
      <if test="versionCodeIdInitial != null" >
        #{versionCodeIdInitial,jdbcType=VARCHAR},
      </if>
      <if test="versionCodeIdFinal != null" >
        #{versionCodeIdFinal,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="library.domain.BookshelfExample" resultType="java.lang.Integer" >
    select count(*) from public.bookshelf
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update public.bookshelf
    <set >
      <if test="record.idBookshelf != null" >
        id_bookshelf = #{record.idBookshelf,jdbcType=INTEGER},
      </if>
      <if test="record.idLibrary != null" >
        id_library = #{record.idLibrary,jdbcType=INTEGER},
      </if>
      <if test="record.codeIdInitial != null" >
        code_id_initial = #{record.codeIdInitial,jdbcType=INTEGER},
      </if>
      <if test="record.codeIdFinal != null" >
        code_id_final = #{record.codeIdFinal,jdbcType=INTEGER},
      </if>
      <if test="record.prefixCodeIdInitial != null" >
        prefix_code_id_initial = #{record.prefixCodeIdInitial,jdbcType=VARCHAR},
      </if>
      <if test="record.prefixCodeIdFinal != null" >
        prefix_code_id_final = #{record.prefixCodeIdFinal,jdbcType=VARCHAR},
      </if>
      <if test="record.versionCodeIdInitial != null" >
        version_code_id_initial = #{record.versionCodeIdInitial,jdbcType=VARCHAR},
      </if>
      <if test="record.versionCodeIdFinal != null" >
        version_code_id_final = #{record.versionCodeIdFinal,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update public.bookshelf
    set id_bookshelf = #{record.idBookshelf,jdbcType=INTEGER},
      id_library = #{record.idLibrary,jdbcType=INTEGER},
      code_id_initial = #{record.codeIdInitial,jdbcType=INTEGER},
      code_id_final = #{record.codeIdFinal,jdbcType=INTEGER},
      prefix_code_id_initial = #{record.prefixCodeIdInitial,jdbcType=VARCHAR},
      prefix_code_id_final = #{record.prefixCodeIdFinal,jdbcType=VARCHAR},
      version_code_id_initial = #{record.versionCodeIdInitial,jdbcType=VARCHAR},
      version_code_id_final = #{record.versionCodeIdFinal,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="library.domain.Bookshelf" >
    update public.bookshelf
    <set >
      <if test="idLibrary != null" >
        id_library = #{idLibrary,jdbcType=INTEGER},
      </if>
      <if test="codeIdInitial != null" >
        code_id_initial = #{codeIdInitial,jdbcType=INTEGER},
      </if>
      <if test="codeIdFinal != null" >
        code_id_final = #{codeIdFinal,jdbcType=INTEGER},
      </if>
      <if test="prefixCodeIdInitial != null" >
        prefix_code_id_initial = #{prefixCodeIdInitial,jdbcType=VARCHAR},
      </if>
      <if test="prefixCodeIdFinal != null" >
        prefix_code_id_final = #{prefixCodeIdFinal,jdbcType=VARCHAR},
      </if>
      <if test="versionCodeIdInitial != null" >
        version_code_id_initial = #{versionCodeIdInitial,jdbcType=VARCHAR},
      </if>
      <if test="versionCodeIdFinal != null" >
        version_code_id_final = #{versionCodeIdFinal,jdbcType=VARCHAR},
      </if>
    </set>
    where id_bookshelf = #{idBookshelf,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="library.domain.Bookshelf" >
    update public.bookshelf
    set id_library = #{idLibrary,jdbcType=INTEGER},
      code_id_initial = #{codeIdInitial,jdbcType=INTEGER},
      code_id_final = #{codeIdFinal,jdbcType=INTEGER},
      prefix_code_id_initial = #{prefixCodeIdInitial,jdbcType=VARCHAR},
      prefix_code_id_final = #{prefixCodeIdFinal,jdbcType=VARCHAR},
      version_code_id_initial = #{versionCodeIdInitial,jdbcType=VARCHAR},
      version_code_id_final = #{versionCodeIdFinal,jdbcType=VARCHAR}
    where id_bookshelf = #{idBookshelf,jdbcType=INTEGER}
  </update>
</mapper>